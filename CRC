#include <stdio.h>
#include <string.h>
#include <stdlib.h>

int main() {
    char rem[50], a[100], s[100], c, msj[50], gen[30];
    int i, genlen, t, j, flag = 0, k, n;

    printf("Enter the generator polynomial: ");
    scanf("%s", gen);
    printf("Generator polynomial (CRC-CCITT): %s\n", gen);

    genlen = strlen(gen);
    k = genlen - 1;

    printf("Enter the message: ");
    scanf("%s", msj);

    n = strlen(msj);

    // Append k zeros to the message
    for (i = 0; i < n; i++)
        a[i] = msj[i];
    for (i = 0; i < k; i++)
        a[n + i] = '0';
    a[n + k] = '\0';

    printf("\nMessage polynomial appended with zeros:\n");
    puts(a);

    // Division step (modulo-2 division)
    for (i = 0; i < n; i++) {
        if (a[i] == '1') {
            t = i;
            for (j = 0; j < genlen; j++) {
                a[t] = (a[t] == gen[j]) ? '0' : '1';
                t++;
            }
        }
    }

    // Extract remainder (CRC bits)
    for (i = 0; i < k; i++)
        rem[i] = a[n + i];
    rem[k] = '\0';

    printf("\nChecksum (Remainder): %s\n", rem);

    // Append remainder to message
    for (i = 0; i < n; i++)
        a[i] = msj[i];
    for (i = 0; i < k; i++)
        a[n + i] = rem[i];
    a[n + k] = '\0';

    printf("\nTransmitted message (message + checksum):\n");
    puts(a);

    // Receiver side
    printf("\nEnter the received message: ");
    scanf("%s", s);

    n = strlen(s);

    // Division again to check for errors
    for (i = 0; i < n - k; i++) {
        if (s[i] == '1') {
            t = i;
            for (j = 0; j < genlen; j++, t++) {
                s[t] = (s[t] == gen[j]) ? '0' : '1';
            }
        }
    }

    for (i = 0; i < k; i++)
        rem[i] = s[n - k + i];
    rem[k] = '\0';

    flag = 0;
    for (i = 0; i < k; i++) {
        if (rem[i] == '1') {
            flag = 1;
            break;
        }
    }

    if (flag == 0)
        printf("\nReceived polynomial is error-free \n");
    else
        printf("\nReceived polynomial contains error \n");

    return 0;
}
